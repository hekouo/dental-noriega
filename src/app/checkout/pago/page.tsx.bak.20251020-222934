"use client";

import { useEffect, useState } from "react";
import { AuthGuard } from "@/components/auth/AuthGuard";
import { Loader2 } from "lucide-react";

  process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!,
);

export default function CheckoutPagoPage() {
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    handleCheckout();
  }, []);

  const handleCheckout = async () => {
    try {
      const checkoutDataStr = localStorage.getItem("checkout_data");
      if (!checkoutDataStr) {
        setError("No hay datos de checkout");
        return;
      }

      const checkoutData = JSON.parse(checkoutDataStr);

      // Call API to create Stripe session
      const response = await fetch("/api/checkout/create-session", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(checkoutData),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || "Error al crear sesi√≥n de pago");
      }

      const { url } = await response.json();

      // Redirect to Stripe Checkout
      window.location.href = url;
    } catch (err: any) {
      setError(err.message);
      setIsLoading(false);
    }
  };

  return (
    <AuthGuard>
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          {isLoading ? (
            <>
              <Loader2 className="animate-spin h-12 w-12 text-primary-600 mx-auto mb-4" />
              <p className="text-gray-600">
                Redirigiendo al checkout seguro...
              </p>
            </>
          ) : error ? (
            <>
              <p className="text-red-600 mb-4">{error}</p>
              <a href="/checkout/datos" className="btn btn-primary">
                Volver
              </a>
            </>
          ) : null}
        </div>
      </div>
    </AuthGuard>
  );
}


