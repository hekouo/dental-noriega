name: PR Size Labeler
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  pr-size:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set environment variables
        run: |
          echo 'CI=1' >> 
          echo 'NODE_ENV=production' >> 
        with:
          fetch-depth: 0
      
      - name: Calculate PR size
        id: pr-size
        run: |
          # Get diff stats
          DIFF_STATS=$(git diff --shortstat origin/${{ github.base_ref }}...HEAD)
          echo "Diff stats: $DIFF_STATS"
          
          # Extract number of changes
          if echo "$DIFF_STATS" | grep -q "files changed"; then
            CHANGES=$(echo "$DIFF_STATS" | grep -o '[0-9]* files changed' | grep -o '[0-9]*')
            ADDITIONS=$(echo "$DIFF_STATS" | grep -o '[0-9]* insertions' | grep -o '[0-9]*' || echo "0")
            DELETIONS=$(echo "$DIFF_STATS" | grep -o '[0-9]* deletions' | grep -o '[0-9]*' || echo "0")
            
            TOTAL_CHANGES=$((ADDITIONS + DELETIONS))
            
            echo "Files changed: $CHANGES"
            echo "Total changes: $TOTAL_CHANGES"
            
            # Determine size label
            if [ $TOTAL_CHANGES -lt 150 ]; then
              SIZE_LABEL="size/small"
            elif [ $TOTAL_CHANGES -lt 500 ]; then
              SIZE_LABEL="size/medium"
            elif [ $TOTAL_CHANGES -lt 1200 ]; then
              SIZE_LABEL="size/large"
            else
              SIZE_LABEL="size/xlarge"
            fi
            
            echo "SIZE_LABEL=$SIZE_LABEL" >> $GITHUB_OUTPUT
            echo "TOTAL_CHANGES=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
          else
            echo "SIZE_LABEL=size/small" >> $GITHUB_OUTPUT
            echo "TOTAL_CHANGES=0" >> $GITHUB_OUTPUT
          fi
      
      - name: Label PR
        uses: actions/github-script@v7
        with:
          script: |
            const sizeLabel = '${{ steps.pr-size.outputs.SIZE_LABEL }}';
            const totalChanges = '${{ steps.pr-size.outputs.TOTAL_CHANGES }}';
            
            // Remove existing size labels
            const existingLabels = context.payload.pull_request.labels
              .filter(label => label.name.startsWith('size/'))
              .map(label => label.name);
            
            for (const label of existingLabels) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: label
              });
            }
            
            // Add new size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [sizeLabel]
            });
            
            console.log(`Labeled PR as ${sizeLabel} (${totalChanges} changes)`);

